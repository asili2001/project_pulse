import {
  Root
} from "./chunk-SO7GXPD6.js";
import "./chunk-K7AKMCHL.js";
import "./chunk-SC6EHYRX.js";
import "./chunk-UYAYURSS.js";
import {
  corePluginHooks,
  coreSystem,
  realmPlugin,
  system
} from "./chunk-I3I4FGWZ.js";
import "./chunk-MTCG6DVY.js";
import "./chunk-77BGO3YS.js";
import "./chunk-QUL5RPXW.js";
import "./chunk-4YQ2LHX3.js";
import "./chunk-KBUAZBQ3.js";
import "./chunk-X3B7SAOS.js";
import {
  require_react
} from "./chunk-RDZYK52F.js";
import {
  __toESM
} from "./chunk-5WWUZCGV.js";

// node_modules/@mdxeditor/editor/dist/plugins/toolbar/index.js
var import_react = __toESM(require_react());
var toolbarSystem = system(
  (r) => {
    const toolbarContents = r.node(() => null);
    return {
      toolbarContents
    };
  },
  [coreSystem]
);
var DEFAULT_TOOLBAR_CONTENTS = () => {
  return "This is an empty toolbar. Pass `{toolbarContents: () => { return <>toolbar components</> }}` to the toolbarPlugin to customize it.";
};
var [
  /** @internal */
  toolbarPlugin,
  /** @internal */
  toolbarPluginHooks
] = realmPlugin({
  id: "toolbar",
  systemSpec: toolbarSystem,
  init: (realm, params) => {
    realm.pubKey("toolbarContents", (params == null ? void 0 : params.toolbarContents) ?? DEFAULT_TOOLBAR_CONTENTS);
    realm.pubKey("addTopAreaChild", ToolbarWrapper);
  }
});
var ToolbarWrapper = () => {
  const [toolbarContents] = toolbarPluginHooks.useEmitterValues("toolbarContents");
  const [readOnly] = corePluginHooks.useEmitterValues("readOnly");
  return import_react.default.createElement(Root, { readOnly }, toolbarContents());
};
export {
  toolbarPlugin,
  toolbarPluginHooks,
  toolbarSystem
};
//# sourceMappingURL=@mdxeditor_editor_plugins_toolbar.js.map
