import {
  MultipleChoiceToggleGroup
} from "./chunk-SO7GXPD6.js";
import "./chunk-K7AKMCHL.js";
import "./chunk-SC6EHYRX.js";
import "./chunk-UYAYURSS.js";
import {
  IS_APPLE,
  corePluginHooks,
  require_Lexical,
  require_LexicalUtils
} from "./chunk-I3I4FGWZ.js";
import "./chunk-MTCG6DVY.js";
import "./chunk-77BGO3YS.js";
import "./chunk-QUL5RPXW.js";
import "./chunk-4YQ2LHX3.js";
import "./chunk-KBUAZBQ3.js";
import "./chunk-X3B7SAOS.js";
import {
  require_react
} from "./chunk-RDZYK52F.js";
import {
  __toESM
} from "./chunk-5WWUZCGV.js";

// node_modules/@mdxeditor/editor/dist/plugins/toolbar/components/UndoRedo.js
var import_utils = __toESM(require_LexicalUtils());
var import_lexical = __toESM(require_Lexical());
var import_react = __toESM(require_react());

// node_modules/@mdxeditor/editor/dist/icons/redo.svg.js
var React = __toESM(require_react(), 1);
var SvgRedo = (props) => React.createElement("svg", { width: 24, height: 24, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", ...props }, React.createElement("mask", { id: "mask0_404_65", style: {
  maskType: "alpha"
}, maskUnits: "userSpaceOnUse", x: 0, y: 0, width: 24, height: 24 }, React.createElement("rect", { width: 24, height: 24, fill: "#D9D9D9" })), React.createElement("g", { mask: "url(#mask0_404_65)" }, React.createElement("path", { d: "M9.9 19C8.28333 19 6.89583 18.475 5.7375 17.425C4.57917 16.375 4 15.0667 4 13.5C4 11.9333 4.57917 10.625 5.7375 9.575C6.89583 8.525 8.28333 8 9.9 8H16.2L13.6 5.4L15 4L20 9L15 14L13.6 12.6L16.2 10H9.9C8.85 10 7.9375 10.3333 7.1625 11C6.3875 11.6667 6 12.5 6 13.5C6 14.5 6.3875 15.3333 7.1625 16C7.9375 16.6667 8.85 17 9.9 17H17V19H9.9Z", fill: "currentColor" })));
var RedoIcon = SvgRedo;

// node_modules/@mdxeditor/editor/dist/icons/undo.svg.js
var React2 = __toESM(require_react(), 1);
var SvgUndo = (props) => React2.createElement("svg", { width: 24, height: 24, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", ...props }, React2.createElement("mask", { id: "mask0_404_71", style: {
  maskType: "alpha"
}, maskUnits: "userSpaceOnUse", x: 0, y: 0, width: 24, height: 24 }, React2.createElement("rect", { width: 24, height: 24, fill: "#D9D9D9" })), React2.createElement("g", { mask: "url(#mask0_404_71)" }, React2.createElement("path", { d: "M7 19V17H14.1C15.15 17 16.0625 16.6667 16.8375 16C17.6125 15.3333 18 14.5 18 13.5C18 12.5 17.6125 11.6667 16.8375 11C16.0625 10.3333 15.15 10 14.1 10H7.8L10.4 12.6L9 14L4 9L9 4L10.4 5.4L7.8 8H14.1C15.7167 8 17.1042 8.525 18.2625 9.575C19.4208 10.625 20 11.9333 20 13.5C20 15.0667 19.4208 16.375 18.2625 17.425C17.1042 18.475 15.7167 19 14.1 19H7Z", fill: "currentColor" })));
var UndoIcon = SvgUndo;

// node_modules/@mdxeditor/editor/dist/plugins/toolbar/components/UndoRedo.js
var UndoRedo = () => {
  const [activeEditor] = corePluginHooks.useEmitterValues("activeEditor");
  const [canUndo, setCanUndo] = import_react.default.useState(false);
  const [canRedo, setCanRedo] = import_react.default.useState(false);
  import_react.default.useEffect(() => {
    if (activeEditor) {
      return (0, import_utils.mergeRegister)(
        activeEditor.registerCommand(
          import_lexical.CAN_UNDO_COMMAND,
          (payload) => {
            setCanUndo(payload);
            return false;
          },
          import_lexical.COMMAND_PRIORITY_CRITICAL
        ),
        activeEditor.registerCommand(
          import_lexical.CAN_REDO_COMMAND,
          (payload) => {
            setCanRedo(payload);
            return false;
          },
          import_lexical.COMMAND_PRIORITY_CRITICAL
        )
      );
    }
  }, [activeEditor]);
  return import_react.default.createElement(
    MultipleChoiceToggleGroup,
    {
      items: [
        {
          title: IS_APPLE ? "Undo (⌘Z)" : "Undo (Ctrl+Z)",
          disabled: !canUndo,
          contents: import_react.default.createElement(UndoIcon, null),
          active: false,
          onChange: () => activeEditor == null ? void 0 : activeEditor.dispatchCommand(import_lexical.UNDO_COMMAND, void 0)
        },
        {
          title: IS_APPLE ? "Redo (⌘Y)" : "Redo (Ctrl+Y)",
          disabled: !canRedo,
          contents: import_react.default.createElement(RedoIcon, null),
          active: false,
          onChange: () => activeEditor == null ? void 0 : activeEditor.dispatchCommand(import_lexical.REDO_COMMAND, void 0)
        }
      ]
    }
  );
};
export {
  UndoRedo
};
//# sourceMappingURL=@mdxeditor_editor_plugins_toolbar_components_UndoRedo.js.map
