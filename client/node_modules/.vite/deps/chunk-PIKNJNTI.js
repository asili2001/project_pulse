import {
  controlOrMeta,
  coreSystem,
  realmPlugin,
  require_Lexical,
  require_LexicalRichText,
  system
} from "./chunk-I3I4FGWZ.js";
import {
  __toESM
} from "./chunk-5WWUZCGV.js";

// node_modules/@mdxeditor/editor/dist/plugins/headings/MdastHeadingVisitor.js
var import_rich_text = __toESM(require_LexicalRichText(), 1);
var MdastHeadingVisitor = {
  testNode: "heading",
  visitNode: function({ mdastNode, actions }) {
    actions.addAndStepInto((0, import_rich_text.$createHeadingNode)(`h${mdastNode.depth}`));
  }
};

// node_modules/@mdxeditor/editor/dist/plugins/headings/index.js
var import_rich_text3 = __toESM(require_LexicalRichText());

// node_modules/@mdxeditor/editor/dist/plugins/headings/LexicalHeadingVisitor.js
var import_rich_text2 = __toESM(require_LexicalRichText(), 1);
var LexicalHeadingVisitor = {
  testLexicalNode: import_rich_text2.$isHeadingNode,
  visitLexicalNode: ({ lexicalNode, actions }) => {
    const depth = parseInt(lexicalNode.getTag()[1], 10);
    actions.addAndStepInto("heading", { depth });
  }
};

// node_modules/@mdxeditor/editor/dist/plugins/headings/index.js
var import_lexical = __toESM(require_Lexical());
var FORMATTING_KEYS = [48, 49, 50, 51, 52, 53, 54];
var ALL_HEADING_LEVELS = [1, 2, 3, 4, 5, 6];
var CODE_TO_HEADING_LEVEL_MAP = {
  49: 1,
  50: 2,
  51: 3,
  52: 4,
  53: 5,
  54: 6
};
var headingsSystem = system(
  (r, [{ createRootEditorSubscription, convertSelectionToNode }]) => {
    const allowedHeadingLevels = r.node(ALL_HEADING_LEVELS);
    r.pub(createRootEditorSubscription, (theRootEditor) => {
      return theRootEditor.registerCommand(
        import_lexical.KEY_DOWN_COMMAND,
        (event) => {
          const { keyCode, ctrlKey, metaKey, altKey } = event;
          if (FORMATTING_KEYS.includes(keyCode) && controlOrMeta(metaKey, ctrlKey) && altKey) {
            event.preventDefault();
            theRootEditor.update(() => {
              if (keyCode === 48) {
                r.pub(convertSelectionToNode, () => (0, import_lexical.$createParagraphNode)());
              } else {
                const allowedHeadingLevelsValues = r.getValue(allowedHeadingLevels);
                const requestedHeadingLevel = CODE_TO_HEADING_LEVEL_MAP[keyCode];
                if (!allowedHeadingLevelsValues.includes(requestedHeadingLevel)) {
                  r.pub(convertSelectionToNode, () => (0, import_rich_text3.$createHeadingNode)(`h${requestedHeadingLevel}`));
                }
              }
            });
            return true;
          }
          return false;
        },
        import_lexical.COMMAND_PRIORITY_LOW
      );
    });
    return {
      allowedHeadingLevels
    };
  },
  [coreSystem]
);
var [headingsPlugin, headingsPluginHooks] = realmPlugin({
  id: "headings",
  systemSpec: headingsSystem,
  applyParamsToSystem(realm, params) {
    realm.pubKey("allowedHeadingLevels", (params == null ? void 0 : params.allowedHeadingLevels) ?? ALL_HEADING_LEVELS);
  },
  init: (realm) => {
    realm.pubKey("addImportVisitor", MdastHeadingVisitor);
    realm.pubKey("addLexicalNode", import_rich_text3.HeadingNode);
    realm.pubKey("addExportVisitor", LexicalHeadingVisitor);
  }
});

export {
  headingsSystem,
  headingsPlugin,
  headingsPluginHooks
};
//# sourceMappingURL=chunk-PIKNJNTI.js.map
