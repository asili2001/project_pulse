import {
  TooltipWrap
} from "./chunk-K7AKMCHL.js";
import {
  require_classnames,
  styles
} from "./chunk-UYAYURSS.js";
import {
  $3dc4ded751c8bdfb$export$353f5b6fc5456de1,
  $3dc4ded751c8bdfb$export$920ad4cf87b18fc7,
  $3dc4ded751c8bdfb$export$af3ec21f6cfb5e30,
  $3dc4ded751c8bdfb$export$be92b6f5f03c0fe9
} from "./chunk-MTCG6DVY.js";
import {
  require_react
} from "./chunk-RDZYK52F.js";
import {
  __toESM
} from "./chunk-5WWUZCGV.js";

// node_modules/@mdxeditor/editor/dist/plugins/toolbar/primitives/toolbar.js
var import_classnames = __toESM(require_classnames(), 1);
var import_react = __toESM(require_react(), 1);
function decorateWithRef(Component, decoratedProps) {
  return import_react.default.forwardRef((props, ref) => {
    const className = (0, import_classnames.default)(decoratedProps.className, props.className);
    return import_react.default.createElement(Component, { ...decoratedProps, ...props, className, ref });
  });
}
function addTooltipToChildren(Component) {
  return ({ title, children, ...props }) => {
    return import_react.default.createElement(Component, { ...props }, import_react.default.createElement(TooltipWrap, { title }, children));
  };
}
var Root = ({ readOnly, children }) => {
  return import_react.default.createElement(
    $3dc4ded751c8bdfb$export$be92b6f5f03c0fe9,
    {
      className: (0, import_classnames.default)(styles.toolbarRoot, { [styles.readOnlyToolbarRoot]: readOnly }),
      ...readOnly ? { tabIndex: -1 } : {}
    },
    children
  );
};
var Button = decorateWithRef($3dc4ded751c8bdfb$export$353f5b6fc5456de1, { className: styles.toolbarButton, "data-toolbar-item": true });
var ButtonWithTooltip = addTooltipToChildren(Button);
var ToolbarToggleItem = decorateWithRef($3dc4ded751c8bdfb$export$920ad4cf87b18fc7, {
  className: styles.toolbarToggleItem,
  "data-toolbar-item": true
});
var SingleToggleGroup = decorateWithRef($3dc4ded751c8bdfb$export$af3ec21f6cfb5e30, {
  type: "single",
  className: styles.toolbarToggleSingleGroup
});
var ToggleSingleGroupWithItem = import_react.default.forwardRef(({ on, title, children, disabled, ...props }, forwardedRef) => {
  return import_react.default.createElement(
    $3dc4ded751c8bdfb$export$af3ec21f6cfb5e30,
    {
      type: "single",
      className: styles.toolbarToggleSingleGroup,
      ...props,
      value: on ? "on" : "off",
      ref: forwardedRef
    },
    import_react.default.createElement(ToolbarToggleItem, { title, value: "on", disabled }, import_react.default.createElement(TooltipWrap, { title }, children))
  );
});
var MultipleChoiceToggleGroup = ({ items }) => {
  return import_react.default.createElement("div", { className: styles.toolbarGroupOfGroups }, items.map((item, index) => import_react.default.createElement(
    ToggleSingleGroupWithItem,
    {
      key: index,
      title: item.title,
      on: item.active,
      onValueChange: (v) => item.onChange(v === "on"),
      disabled: item.disabled
    },
    item.contents
  )));
};
var SingleChoiceToggleGroup = ({ value, onChange, className, items }) => {
  return import_react.default.createElement("div", { className: styles.toolbarGroupOfGroups }, import_react.default.createElement(
    $3dc4ded751c8bdfb$export$af3ec21f6cfb5e30,
    {
      type: "single",
      className: (0, import_classnames.default)(styles.toolbarToggleSingleGroup, className),
      onValueChange: onChange,
      value: value || "",
      onFocus: (e) => e.preventDefault()
    },
    items.map((item, index) => import_react.default.createElement(ToolbarToggleItem, { key: index, value: item.value }, import_react.default.createElement(TooltipWrap, { title: item.title }, item.contents)))
  ));
};

export {
  Root,
  ButtonWithTooltip,
  MultipleChoiceToggleGroup,
  SingleChoiceToggleGroup
};
//# sourceMappingURL=chunk-SO7GXPD6.js.map
