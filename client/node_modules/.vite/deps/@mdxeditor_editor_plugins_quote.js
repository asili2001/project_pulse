import {
  coreSystem,
  realmPlugin,
  require_LexicalRichText,
  system
} from "./chunk-I3I4FGWZ.js";
import "./chunk-4YQ2LHX3.js";
import "./chunk-RDZYK52F.js";
import {
  __toESM
} from "./chunk-5WWUZCGV.js";

// node_modules/@mdxeditor/editor/dist/plugins/quote/index.js
var import_rich_text3 = __toESM(require_LexicalRichText());

// node_modules/@mdxeditor/editor/dist/plugins/quote/MdastBlockQuoteVisitor.js
var import_rich_text = __toESM(require_LexicalRichText(), 1);
var MdastBlockQuoteVisitor = {
  testNode: "blockquote",
  visitNode({ actions }) {
    actions.addAndStepInto((0, import_rich_text.$createQuoteNode)());
  }
};

// node_modules/@mdxeditor/editor/dist/plugins/quote/LexicalQuoteVisitor.js
var import_rich_text2 = __toESM(require_LexicalRichText(), 1);
var LexicalQuoteVisitor = {
  testLexicalNode: import_rich_text2.$isQuoteNode,
  visitLexicalNode: ({ lexicalNode, mdastParent, actions }) => {
    const paragraph = { type: "paragraph", children: [] };
    actions.appendToParent(mdastParent, { type: "blockquote", children: [paragraph] });
    actions.visitChildren(lexicalNode, paragraph);
  }
};

// node_modules/@mdxeditor/editor/dist/plugins/quote/index.js
var [
  /** @internal */
  quotePlugin,
  /** @internal */
  quotePluginHooks
] = realmPlugin({
  id: "quote",
  systemSpec: system(() => {
    return {};
  }, [coreSystem]),
  init: (realm) => {
    realm.pubKey("addImportVisitor", MdastBlockQuoteVisitor);
    realm.pubKey("addLexicalNode", import_rich_text3.QuoteNode);
    realm.pubKey("addExportVisitor", LexicalQuoteVisitor);
  }
});
export {
  quotePlugin,
  quotePluginHooks
};
//# sourceMappingURL=@mdxeditor_editor_plugins_quote.js.map
