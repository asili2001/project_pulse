{
  "version": 3,
  "sources": ["../../@lexical/react/LexicalComposer.dev.js", "../../@lexical/react/LexicalComposer.js", "../../@lexical/react/useLexicalEditable.dev.js", "../../@lexical/react/useLexicalEditable.js", "../../@lexical/text/LexicalText.dev.js", "../../@lexical/text/LexicalText.js", "../../@lexical/dragon/LexicalDragon.dev.js", "../../@lexical/dragon/LexicalDragon.js", "../../@lexical/react/LexicalRichTextPlugin.dev.js", "../../@lexical/react/LexicalRichTextPlugin.js", "../../@lexical/react/LexicalContentEditable.dev.js", "../../@lexical/react/LexicalContentEditable.js", "../../@lexical/react/LexicalErrorBoundary.dev.js", "../../@lexical/react/LexicalErrorBoundary.js", "../../@mdxeditor/editor/dist/MDXEditor.js", "../../@mdxeditor/editor/dist/styles/lexical-theme.module.css.js", "../../@mdxeditor/editor/dist/styles/lexicalTheme.js"],
  "sourcesContent": ["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';\n\nvar LexicalComposerContext = require('@lexical/react/LexicalComposerContext');\nvar lexical = require('lexical');\nvar React = require('react');\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\nconst CAN_USE_DOM = typeof window !== 'undefined' && typeof window.document !== 'undefined' && typeof window.document.createElement !== 'undefined';\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\nconst useLayoutEffectImpl = CAN_USE_DOM ? React.useLayoutEffect : React.useEffect;\nvar useLayoutEffect = useLayoutEffectImpl;\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\nconst HISTORY_MERGE_OPTIONS = {\n  tag: 'history-merge'\n};\nfunction LexicalComposer({\n  initialConfig,\n  children\n}) {\n  const composerContext = React.useMemo(() => {\n    const {\n      theme,\n      namespace,\n      editor__DEPRECATED: initialEditor,\n      nodes,\n      onError,\n      editorState: initialEditorState\n    } = initialConfig;\n    const context = LexicalComposerContext.createLexicalComposerContext(null, theme);\n    let editor = initialEditor || null;\n\n    if (editor === null) {\n      const newEditor = lexical.createEditor({\n        editable: initialConfig.editable,\n        namespace,\n        nodes,\n        onError: error => onError(error, newEditor),\n        theme\n      });\n      initializeEditor(newEditor, initialEditorState);\n      editor = newEditor;\n    }\n\n    return [editor, context];\n  }, // We only do this for init\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  []);\n  useLayoutEffect(() => {\n    const isEditable = initialConfig.editable;\n    const [editor] = composerContext;\n    editor.setEditable(isEditable !== undefined ? isEditable : true); // We only do this for init\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return /*#__PURE__*/React.createElement(LexicalComposerContext.LexicalComposerContext.Provider, {\n    value: composerContext\n  }, children);\n}\n\nfunction initializeEditor(editor, initialEditorState) {\n  if (initialEditorState === null) {\n    return;\n  } else if (initialEditorState === undefined) {\n    editor.update(() => {\n      const root = lexical.$getRoot();\n\n      if (root.isEmpty()) {\n        const paragraph = lexical.$createParagraphNode();\n        root.append(paragraph);\n        const activeElement = CAN_USE_DOM ? document.activeElement : null;\n\n        if (lexical.$getSelection() !== null || activeElement !== null && activeElement === editor.getRootElement()) {\n          paragraph.select();\n        }\n      }\n    }, HISTORY_MERGE_OPTIONS);\n  } else if (initialEditorState !== null) {\n    switch (typeof initialEditorState) {\n      case 'string':\n        {\n          const parsedEditorState = editor.parseEditorState(initialEditorState);\n          editor.setEditorState(parsedEditorState, HISTORY_MERGE_OPTIONS);\n          break;\n        }\n\n      case 'object':\n        {\n          editor.setEditorState(initialEditorState, HISTORY_MERGE_OPTIONS);\n          break;\n        }\n\n      case 'function':\n        {\n          editor.update(() => {\n            const root = lexical.$getRoot();\n\n            if (root.isEmpty()) {\n              initialEditorState(editor);\n            }\n          }, HISTORY_MERGE_OPTIONS);\n          break;\n        }\n    }\n  }\n}\n\nexports.LexicalComposer = LexicalComposer;\n", "/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict'\nconst LexicalComposer = process.env.NODE_ENV === 'development' ? require('./LexicalComposer.dev.js') : require('./LexicalComposer.prod.js')\nmodule.exports = LexicalComposer;", "/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';\n\nvar LexicalComposerContext = require('@lexical/react/LexicalComposerContext');\nvar react = require('react');\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\nconst CAN_USE_DOM = typeof window !== 'undefined' && typeof window.document !== 'undefined' && typeof window.document.createElement !== 'undefined';\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\nconst useLayoutEffectImpl = CAN_USE_DOM ? react.useLayoutEffect : react.useEffect;\nvar useLayoutEffect = useLayoutEffectImpl;\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n/**\n * Shortcut to Lexical subscriptions when values are used for render.\n */\nfunction useLexicalSubscription(subscription) {\n  const [editor] = LexicalComposerContext.useLexicalComposerContext();\n  const initializedSubscription = react.useMemo(() => subscription(editor), [editor, subscription]);\n  const valueRef = react.useRef(initializedSubscription.initialValueFn());\n  const [value, setValue] = react.useState(valueRef.current);\n  useLayoutEffect(() => {\n    const {\n      initialValueFn,\n      subscribe\n    } = initializedSubscription;\n    const currentValue = initialValueFn();\n\n    if (valueRef.current !== currentValue) {\n      valueRef.current = currentValue;\n      setValue(currentValue);\n    }\n\n    return subscribe(newValue => {\n      valueRef.current = newValue;\n      setValue(newValue);\n    });\n  }, [initializedSubscription, subscription]);\n  return value;\n}\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nfunction subscription(editor) {\n  return {\n    initialValueFn: () => editor.isEditable(),\n    subscribe: callback => {\n      return editor.registerEditableListener(callback);\n    }\n  };\n}\n\nfunction useLexicalEditable() {\n  return useLexicalSubscription(subscription);\n}\n\nmodule.exports = useLexicalEditable;\n", "/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict'\nconst useLexicalEditable = process.env.NODE_ENV === 'development' ? require('./useLexicalEditable.dev.js') : require('./useLexicalEditable.prod.js')\nmodule.exports = useLexicalEditable;", "/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';\n\nvar lexical = require('lexical');\n\n/** @module @lexical/text */\n\n/**\n * Finds a TextNode with a size larger than targetCharacters and returns\n * the node along with the remaining length of the text.\n * @param root - The RootNode.\n * @param targetCharacters - The number of characters whose TextNode must be larger than.\n * @returns The TextNode and the intersections offset, or null if no TextNode is found.\n */\nfunction $findTextIntersectionFromCharacters(root, targetCharacters) {\n  let node = root.getFirstChild();\n  let currentCharacters = 0;\n\n  mainLoop: while (node !== null) {\n    if (lexical.$isElementNode(node)) {\n      const child = node.getFirstChild();\n\n      if (child !== null) {\n        node = child;\n        continue;\n      }\n    } else if (lexical.$isTextNode(node)) {\n      const characters = node.getTextContentSize();\n\n      if (currentCharacters + characters > targetCharacters) {\n        return {\n          node,\n          offset: targetCharacters - currentCharacters\n        };\n      }\n\n      currentCharacters += characters;\n    }\n\n    const sibling = node.getNextSibling();\n\n    if (sibling !== null) {\n      node = sibling;\n      continue;\n    }\n\n    let parent = node.getParent();\n\n    while (parent !== null) {\n      const parentSibling = parent.getNextSibling();\n\n      if (parentSibling !== null) {\n        node = parentSibling;\n        continue mainLoop;\n      }\n\n      parent = parent.getParent();\n    }\n\n    break;\n  }\n\n  return null;\n}\n/**\n * Determines if the root has any text content and can trim any whitespace if it does.\n * @param isEditorComposing - Is the editor in composition mode due to an active Input Method Editor?\n * @param trim - Should the root text have its whitespaced trimmed? Defaults to true.\n * @returns true if text content is empty, false if there is text or isEditorComposing is true.\n */\n\nfunction $isRootTextContentEmpty(isEditorComposing, trim = true) {\n  if (isEditorComposing) {\n    return false;\n  }\n\n  let text = $rootTextContent();\n\n  if (trim) {\n    text = text.trim();\n  }\n\n  return text === '';\n}\n/**\n * Returns a function that executes {@link $isRootTextContentEmpty}\n * @param isEditorComposing - Is the editor in composition mode due to an active Input Method Editor?\n * @param trim - Should the root text have its whitespaced trimmed? Defaults to true.\n * @returns A function that executes $isRootTextContentEmpty based on arguments.\n */\n\nfunction $isRootTextContentEmptyCurry(isEditorComposing, trim) {\n  return () => $isRootTextContentEmpty(isEditorComposing, trim);\n}\n/**\n * Returns the root's text content.\n * @returns The root's text content.\n */\n\nfunction $rootTextContent() {\n  const root = lexical.$getRoot();\n  return root.getTextContent();\n}\n/**\n * Determines if the input should show the placeholder. If anything is in\n * in the root the placeholder should not be shown.\n * @param isComposing - Is the editor in composition mode due to an active Input Method Editor?\n * @returns true if the input should show the placeholder, false otherwise.\n */\n\nfunction $canShowPlaceholder(isComposing) {\n  if (!$isRootTextContentEmpty(isComposing, false)) {\n    return false;\n  }\n\n  const root = lexical.$getRoot();\n  const children = root.getChildren();\n  const childrenLength = children.length;\n\n  if (childrenLength > 1) {\n    return false;\n  }\n\n  for (let i = 0; i < childrenLength; i++) {\n    const topBlock = children[i];\n\n    if (lexical.$isDecoratorNode(topBlock)) {\n      return false;\n    }\n\n    if (lexical.$isElementNode(topBlock)) {\n      if (!lexical.$isParagraphNode(topBlock)) {\n        return false;\n      }\n\n      if (topBlock.__indent !== 0) {\n        return false;\n      }\n\n      const topBlockChildren = topBlock.getChildren();\n      const topBlockChildrenLength = topBlockChildren.length;\n\n      for (let s = 0; s < topBlockChildrenLength; s++) {\n        const child = topBlockChildren[i];\n\n        if (!lexical.$isTextNode(child)) {\n          return false;\n        }\n      }\n    }\n  }\n\n  return true;\n}\n/**\n * Returns a function that executes {@link $canShowPlaceholder}\n * @param isEditorComposing - Is the editor in composition mode due to an active Input Method Editor?\n * @returns A function that executes $canShowPlaceholder with arguments.\n */\n\nfunction $canShowPlaceholderCurry(isEditorComposing) {\n  return () => $canShowPlaceholder(isEditorComposing);\n}\n\n/**\n * Returns a touple that can be rested (...) into mergeRegister to clean up\n * node transforms listeners that transforms text into another node, eg. a HashtagNode.\n * @example\n * ```ts\n *   useEffect(() => {\n    return mergeRegister(\n      ...registerLexicalTextEntity(editor, getMatch, targetNode, createNode),\n    );\n  }, [createNode, editor, getMatch, targetNode]);\n * ```\n * Where targetNode is the type of node containing the text you want to transform (like a text input),\n * then getMatch uses a regex to find a matching text and creates the proper node to include the matching text.\n * @param editor - The lexical editor.\n * @param getMatch - Finds a matching string that satisfies a regex expression.\n * @param targetNode - The node type that contains text to match with. eg. HashtagNode\n * @param createNode - A function that creates a new node to contain the matched text. eg createHashtagNode\n * @returns An array containing the plain text and reverse node transform listeners.\n */\nfunction registerLexicalTextEntity(editor, getMatch, targetNode, createNode) {\n  const isTargetNode = node => {\n    return node instanceof targetNode;\n  };\n\n  const replaceWithSimpleText = node => {\n    const textNode = lexical.$createTextNode(node.getTextContent());\n    textNode.setFormat(node.getFormat());\n    node.replace(textNode);\n  };\n\n  const getMode = node => {\n    return node.getLatest().__mode;\n  };\n\n  const textNodeTransform = node => {\n    if (!node.isSimpleText()) {\n      return;\n    }\n\n    const prevSibling = node.getPreviousSibling();\n    let text = node.getTextContent();\n    let currentNode = node;\n    let match;\n\n    if (lexical.$isTextNode(prevSibling)) {\n      const previousText = prevSibling.getTextContent();\n      const combinedText = previousText + text;\n      const prevMatch = getMatch(combinedText);\n\n      if (isTargetNode(prevSibling)) {\n        if (prevMatch === null || getMode(prevSibling) !== 0) {\n          replaceWithSimpleText(prevSibling);\n          return;\n        } else {\n          const diff = prevMatch.end - previousText.length;\n\n          if (diff > 0) {\n            const concatText = text.slice(0, diff);\n            const newTextContent = previousText + concatText;\n            prevSibling.select();\n            prevSibling.setTextContent(newTextContent);\n\n            if (diff === text.length) {\n              node.remove();\n            } else {\n              const remainingText = text.slice(diff);\n              node.setTextContent(remainingText);\n            }\n\n            return;\n          }\n        }\n      } else if (prevMatch === null || prevMatch.start < previousText.length) {\n        return;\n      }\n    } // eslint-disable-next-line no-constant-condition\n\n\n    while (true) {\n      match = getMatch(text);\n      let nextText = match === null ? '' : text.slice(match.end);\n      text = nextText;\n\n      if (nextText === '') {\n        const nextSibling = currentNode.getNextSibling();\n\n        if (lexical.$isTextNode(nextSibling)) {\n          nextText = currentNode.getTextContent() + nextSibling.getTextContent();\n          const nextMatch = getMatch(nextText);\n\n          if (nextMatch === null) {\n            if (isTargetNode(nextSibling)) {\n              replaceWithSimpleText(nextSibling);\n            } else {\n              nextSibling.markDirty();\n            }\n\n            return;\n          } else if (nextMatch.start !== 0) {\n            return;\n          }\n        }\n      } else {\n        const nextMatch = getMatch(nextText);\n\n        if (nextMatch !== null && nextMatch.start === 0) {\n          return;\n        }\n      }\n\n      if (match === null) {\n        return;\n      }\n\n      if (match.start === 0 && lexical.$isTextNode(prevSibling) && prevSibling.isTextEntity()) {\n        continue;\n      }\n\n      let nodeToReplace;\n\n      if (match.start === 0) {\n        [nodeToReplace, currentNode] = currentNode.splitText(match.end);\n      } else {\n        [, nodeToReplace, currentNode] = currentNode.splitText(match.start, match.end);\n      }\n\n      const replacementNode = createNode(nodeToReplace);\n      replacementNode.setFormat(nodeToReplace.getFormat());\n      nodeToReplace.replace(replacementNode);\n\n      if (currentNode == null) {\n        return;\n      }\n    }\n  };\n\n  const reverseNodeTransform = node => {\n    const text = node.getTextContent();\n    const match = getMatch(text);\n\n    if (match === null || match.start !== 0) {\n      replaceWithSimpleText(node);\n      return;\n    }\n\n    if (text.length > match.end) {\n      // This will split out the rest of the text as simple text\n      node.splitText(match.end);\n      return;\n    }\n\n    const prevSibling = node.getPreviousSibling();\n\n    if (lexical.$isTextNode(prevSibling) && prevSibling.isTextEntity()) {\n      replaceWithSimpleText(prevSibling);\n      replaceWithSimpleText(node);\n    }\n\n    const nextSibling = node.getNextSibling();\n\n    if (lexical.$isTextNode(nextSibling) && nextSibling.isTextEntity()) {\n      replaceWithSimpleText(nextSibling); // This may have already been converted in the previous block\n\n      if (isTargetNode(node)) {\n        replaceWithSimpleText(node);\n      }\n    }\n  };\n\n  const removePlainTextTransform = editor.registerNodeTransform(lexical.TextNode, textNodeTransform);\n  const removeReverseNodeTransform = editor.registerNodeTransform(targetNode, reverseNodeTransform);\n  return [removePlainTextTransform, removeReverseNodeTransform];\n}\n\nexports.$canShowPlaceholder = $canShowPlaceholder;\nexports.$canShowPlaceholderCurry = $canShowPlaceholderCurry;\nexports.$findTextIntersectionFromCharacters = $findTextIntersectionFromCharacters;\nexports.$isRootTextContentEmpty = $isRootTextContentEmpty;\nexports.$isRootTextContentEmptyCurry = $isRootTextContentEmptyCurry;\nexports.$rootTextContent = $rootTextContent;\nexports.registerLexicalTextEntity = registerLexicalTextEntity;\n", "/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict'\nconst LexicalText = process.env.NODE_ENV === 'development' ? require('./LexicalText.dev.js') : require('./LexicalText.prod.js')\nmodule.exports = LexicalText;", "/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';\n\nvar lexical = require('lexical');\n\n/** @module @lexical/dragon */\nfunction registerDragonSupport(editor) {\n  const origin = window.location.origin;\n\n  const handler = event => {\n    if (event.origin !== origin) {\n      return;\n    }\n\n    const rootElement = editor.getRootElement();\n\n    if (document.activeElement !== rootElement) {\n      return;\n    }\n\n    const data = event.data;\n\n    if (typeof data === 'string') {\n      let parsedData;\n\n      try {\n        parsedData = JSON.parse(data);\n      } catch (e) {\n        return;\n      }\n\n      if (parsedData && parsedData.protocol === 'nuanria_messaging' && parsedData.type === 'request') {\n        const payload = parsedData.payload;\n\n        if (payload && payload.functionId === 'makeChanges') {\n          const args = payload.args;\n\n          if (args) {\n            const [elementStart, elementLength, text, selStart, selLength, formatCommand] = args; // TODO: we should probably handle formatCommand somehow?\n            editor.update(() => {\n              const selection = lexical.$getSelection();\n\n              if (lexical.$isRangeSelection(selection)) {\n                const anchor = selection.anchor;\n                let anchorNode = anchor.getNode();\n                let setSelStart = 0;\n                let setSelEnd = 0;\n\n                if (lexical.$isTextNode(anchorNode)) {\n                  // set initial selection\n                  if (elementStart >= 0 && elementLength >= 0) {\n                    setSelStart = elementStart;\n                    setSelEnd = elementStart + elementLength; // If the offset is more than the end, make it the end\n\n                    selection.setTextNodeRange(anchorNode, setSelStart, anchorNode, setSelEnd);\n                  }\n                }\n\n                if (setSelStart !== setSelEnd || text !== '') {\n                  selection.insertRawText(text);\n                  anchorNode = anchor.getNode();\n                }\n\n                if (lexical.$isTextNode(anchorNode)) {\n                  // set final selection\n                  setSelStart = selStart;\n                  setSelEnd = selStart + selLength;\n                  const anchorNodeTextLength = anchorNode.getTextContentSize(); // If the offset is more than the end, make it the end\n\n                  setSelStart = setSelStart > anchorNodeTextLength ? anchorNodeTextLength : setSelStart;\n                  setSelEnd = setSelEnd > anchorNodeTextLength ? anchorNodeTextLength : setSelEnd;\n                  selection.setTextNodeRange(anchorNode, setSelStart, anchorNode, setSelEnd);\n                } // block the chrome extension from handling this event\n\n\n                event.stopImmediatePropagation();\n              }\n            });\n          }\n        }\n      }\n    }\n  };\n\n  window.addEventListener('message', handler, true);\n  return () => {\n    window.removeEventListener('message', handler, true);\n  };\n}\n\nexports.registerDragonSupport = registerDragonSupport;\n", "/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict'\nconst LexicalDragon = process.env.NODE_ENV === 'development' ? require('./LexicalDragon.dev.js') : require('./LexicalDragon.prod.js')\nmodule.exports = LexicalDragon;", "/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';\n\nvar LexicalComposerContext = require('@lexical/react/LexicalComposerContext');\nvar useLexicalEditable = require('@lexical/react/useLexicalEditable');\nvar React = require('react');\nvar text = require('@lexical/text');\nvar utils = require('@lexical/utils');\nvar reactDom = require('react-dom');\nvar dragon = require('@lexical/dragon');\nvar richText = require('@lexical/rich-text');\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\nconst CAN_USE_DOM = typeof window !== 'undefined' && typeof window.document !== 'undefined' && typeof window.document.createElement !== 'undefined';\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\nconst useLayoutEffectImpl = CAN_USE_DOM ? React.useLayoutEffect : React.useEffect;\nvar useLayoutEffect = useLayoutEffectImpl;\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nfunction canShowPlaceholderFromCurrentEditorState(editor) {\n  const currentCanShowPlaceholder = editor.getEditorState().read(text.$canShowPlaceholderCurry(editor.isComposing()));\n  return currentCanShowPlaceholder;\n}\n\nfunction useCanShowPlaceholder(editor) {\n  const [canShowPlaceholder, setCanShowPlaceholder] = React.useState(() => canShowPlaceholderFromCurrentEditorState(editor));\n  useLayoutEffect(() => {\n    function resetCanShowPlaceholder() {\n      const currentCanShowPlaceholder = canShowPlaceholderFromCurrentEditorState(editor);\n      setCanShowPlaceholder(currentCanShowPlaceholder);\n    }\n\n    resetCanShowPlaceholder();\n    return utils.mergeRegister(editor.registerUpdateListener(() => {\n      resetCanShowPlaceholder();\n    }), editor.registerEditableListener(() => {\n      resetCanShowPlaceholder();\n    }));\n  }, [editor]);\n  return canShowPlaceholder;\n}\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\nfunction useDecorators(editor, ErrorBoundary) {\n  const [decorators, setDecorators] = React.useState(() => editor.getDecorators()); // Subscribe to changes\n\n  useLayoutEffect(() => {\n    return editor.registerDecoratorListener(nextDecorators => {\n      reactDom.flushSync(() => {\n        setDecorators(nextDecorators);\n      });\n    });\n  }, [editor]);\n  React.useEffect(() => {\n    // If the content editable mounts before the subscription is added, then\n    // nothing will be rendered on initial pass. We can get around that by\n    // ensuring that we set the value.\n    setDecorators(editor.getDecorators());\n  }, [editor]); // Return decorators defined as React Portals\n\n  return React.useMemo(() => {\n    const decoratedPortals = [];\n    const decoratorKeys = Object.keys(decorators);\n\n    for (let i = 0; i < decoratorKeys.length; i++) {\n      const nodeKey = decoratorKeys[i];\n      const reactDecorator = /*#__PURE__*/React.createElement(ErrorBoundary, {\n        onError: e => editor._onError(e)\n      }, /*#__PURE__*/React.createElement(React.Suspense, {\n        fallback: null\n      }, decorators[nodeKey]));\n      const element = editor.getElementByKey(nodeKey);\n\n      if (element !== null) {\n        decoratedPortals.push( /*#__PURE__*/reactDom.createPortal(reactDecorator, element, nodeKey));\n      }\n    }\n\n    return decoratedPortals;\n  }, [ErrorBoundary, decorators, editor]);\n}\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\nfunction useRichTextSetup(editor) {\n  useLayoutEffect(() => {\n    return utils.mergeRegister(richText.registerRichText(editor), dragon.registerDragonSupport(editor)); // We only do this for init\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [editor]);\n}\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\nfunction RichTextPlugin({\n  contentEditable,\n  placeholder,\n  ErrorBoundary\n}) {\n  const [editor] = LexicalComposerContext.useLexicalComposerContext();\n  const decorators = useDecorators(editor, ErrorBoundary);\n  useRichTextSetup(editor);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, contentEditable, /*#__PURE__*/React.createElement(Placeholder, {\n    content: placeholder\n  }), decorators);\n}\n\nfunction Placeholder({\n  content\n}) {\n  const [editor] = LexicalComposerContext.useLexicalComposerContext();\n  const showPlaceholder = useCanShowPlaceholder(editor);\n  const editable = useLexicalEditable();\n\n  if (!showPlaceholder) {\n    return null;\n  }\n\n  if (typeof content === 'function') {\n    return content(editable);\n  } else {\n    return content;\n  }\n}\n\nexports.RichTextPlugin = RichTextPlugin;\n", "/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict'\nconst LexicalRichTextPlugin = process.env.NODE_ENV === 'development' ? require('./LexicalRichTextPlugin.dev.js') : require('./LexicalRichTextPlugin.prod.js')\nmodule.exports = LexicalRichTextPlugin;", "/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';\n\nvar LexicalComposerContext = require('@lexical/react/LexicalComposerContext');\nvar React = require('react');\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\nconst CAN_USE_DOM = typeof window !== 'undefined' && typeof window.document !== 'undefined' && typeof window.document.createElement !== 'undefined';\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\nconst useLayoutEffectImpl = CAN_USE_DOM ? React.useLayoutEffect : React.useEffect;\nvar useLayoutEffect = useLayoutEffectImpl;\n\nfunction ContentEditable({\n  ariaActiveDescendant,\n  ariaAutoComplete,\n  ariaControls,\n  ariaDescribedBy,\n  ariaExpanded,\n  ariaLabel,\n  ariaLabelledBy,\n  ariaMultiline,\n  ariaOwns,\n  ariaRequired,\n  autoCapitalize,\n  className,\n  id,\n  role = 'textbox',\n  spellCheck = true,\n  style,\n  tabIndex,\n  'data-testid': testid,\n  ...rest\n}) {\n  const [editor] = LexicalComposerContext.useLexicalComposerContext();\n  const [isEditable, setEditable] = React.useState(false);\n  const ref = React.useCallback(rootElement => {\n    editor.setRootElement(rootElement);\n  }, [editor]);\n  useLayoutEffect(() => {\n    setEditable(editor.isEditable());\n    return editor.registerEditableListener(currentIsEditable => {\n      setEditable(currentIsEditable);\n    });\n  }, [editor]);\n  return /*#__PURE__*/React.createElement(\"div\", _extends({}, rest, {\n    \"aria-activedescendant\": !isEditable ? undefined : ariaActiveDescendant,\n    \"aria-autocomplete\": !isEditable ? 'none' : ariaAutoComplete,\n    \"aria-controls\": !isEditable ? undefined : ariaControls,\n    \"aria-describedby\": ariaDescribedBy,\n    \"aria-expanded\": !isEditable ? undefined : role === 'combobox' ? !!ariaExpanded : undefined,\n    \"aria-label\": ariaLabel,\n    \"aria-labelledby\": ariaLabelledBy,\n    \"aria-multiline\": ariaMultiline,\n    \"aria-owns\": !isEditable ? undefined : ariaOwns,\n    \"aria-readonly\": !isEditable ? true : undefined,\n    \"aria-required\": ariaRequired,\n    autoCapitalize: autoCapitalize,\n    className: className,\n    contentEditable: isEditable,\n    \"data-testid\": testid,\n    id: id,\n    ref: ref,\n    role: role,\n    spellCheck: spellCheck,\n    style: style,\n    tabIndex: tabIndex\n  }));\n}\n\nexports.ContentEditable = ContentEditable;\n", "/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict'\nconst LexicalContentEditable = process.env.NODE_ENV === 'development' ? require('./LexicalContentEditable.dev.js') : require('./LexicalContentEditable.prod.js')\nmodule.exports = LexicalContentEditable;", "/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';\n\nvar React = require('react');\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  _setPrototypeOf(subClass, superClass);\n}\n\nvar changedArray = function changedArray(a, b) {\n  if (a === void 0) {\n    a = [];\n  }\n\n  if (b === void 0) {\n    b = [];\n  }\n\n  return a.length !== b.length || a.some(function (item, index) {\n    return !Object.is(item, b[index]);\n  });\n};\n\nvar initialState = {\n  error: null\n};\n\nvar ErrorBoundary = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(ErrorBoundary, _React$Component);\n\n  function ErrorBoundary() {\n    var _this;\n\n    for (var _len = arguments.length, _args = new Array(_len), _key = 0; _key < _len; _key++) {\n      _args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(_args)) || this;\n    _this.state = initialState;\n\n    _this.resetErrorBoundary = function () {\n      var _this$props;\n\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      _this.props.onReset == null ? void 0 : (_this$props = _this.props).onReset.apply(_this$props, args);\n\n      _this.reset();\n    };\n\n    return _this;\n  }\n\n  ErrorBoundary.getDerivedStateFromError = function getDerivedStateFromError(error) {\n    return {\n      error: error\n    };\n  };\n\n  var _proto = ErrorBoundary.prototype;\n\n  _proto.reset = function reset() {\n    this.setState(initialState);\n  };\n\n  _proto.componentDidCatch = function componentDidCatch(error, info) {\n    var _this$props$onError, _this$props2;\n\n    (_this$props$onError = (_this$props2 = this.props).onError) == null ? void 0 : _this$props$onError.call(_this$props2, error, info);\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps, prevState) {\n    var error = this.state.error;\n    var resetKeys = this.props.resetKeys; // There's an edge case where if the thing that triggered the error\n    // happens to *also* be in the resetKeys array, we'd end up resetting\n    // the error boundary immediately. This would likely trigger a second\n    // error to be thrown.\n    // So we make sure that we don't check the resetKeys on the first call\n    // of cDU after the error is set\n\n    if (error !== null && prevState.error !== null && changedArray(prevProps.resetKeys, resetKeys)) {\n      var _this$props$onResetKe, _this$props3;\n\n      (_this$props$onResetKe = (_this$props3 = this.props).onResetKeysChange) == null ? void 0 : _this$props$onResetKe.call(_this$props3, prevProps.resetKeys, resetKeys);\n      this.reset();\n    }\n  };\n\n  _proto.render = function render() {\n    var error = this.state.error;\n    var _this$props4 = this.props,\n        fallbackRender = _this$props4.fallbackRender,\n        FallbackComponent = _this$props4.FallbackComponent,\n        fallback = _this$props4.fallback;\n\n    if (error !== null) {\n      var _props = {\n        error: error,\n        resetErrorBoundary: this.resetErrorBoundary\n      };\n\n      if ( /*#__PURE__*/React.isValidElement(fallback)) {\n        return fallback;\n      } else if (typeof fallbackRender === 'function') {\n        return fallbackRender(_props);\n      } else if (FallbackComponent) {\n        return /*#__PURE__*/React.createElement(FallbackComponent, _props);\n      } else {\n        throw new Error('react-error-boundary requires either a fallback, fallbackRender, or FallbackComponent prop');\n      }\n    }\n\n    return this.props.children;\n  };\n\n  return ErrorBoundary;\n}(React.Component);\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\nfunction LexicalErrorBoundary({\n  children,\n  onError\n}) {\n  return /*#__PURE__*/React.createElement(ErrorBoundary, {\n    fallback: /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        border: '1px solid #f00',\n        color: '#f00',\n        padding: '8px'\n      }\n    }, \"An error was thrown.\"),\n    onError: onError\n  }, children);\n}\n\nmodule.exports = LexicalErrorBoundary;\n", "/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict'\nconst LexicalErrorBoundary = process.env.NODE_ENV === 'development' ? require('./LexicalErrorBoundary.dev.js') : require('./LexicalErrorBoundary.prod.js')\nmodule.exports = LexicalErrorBoundary;", "import React__default from \"react\";\nimport { corePlugin, corePluginHooks } from \"./plugins/core/index.js\";\nimport { lexicalTheme } from \"./styles/lexicalTheme.js\";\nimport { LexicalComposer } from \"@lexical/react/LexicalComposer.js\";\nimport styles from \"./styles/ui.module.css.js\";\nimport { RichTextPlugin } from \"@lexical/react/LexicalRichTextPlugin.js\";\nimport { ContentEditable } from \"@lexical/react/LexicalContentEditable.js\";\nimport LexicalErrorBoundary from \"@lexical/react/LexicalErrorBoundary.js\";\nimport classNames from \"classnames\";\nimport { noop } from \"./utils/fp.js\";\nimport { RealmPluginInitializer, useHasPlugin } from \"./gurx/react.js\";\nconst LexicalProvider = ({ children }) => {\n  const [initialRootEditorState, nodes, readOnly] = corePluginHooks.useEmitterValues(\n    \"initialRootEditorState\",\n    \"usedLexicalNodes\",\n    \"readOnly\"\n  );\n  return /* @__PURE__ */ React__default.createElement(\n    LexicalComposer,\n    {\n      initialConfig: {\n        editable: !readOnly,\n        editorState: initialRootEditorState,\n        namespace: \"MDXEditor\",\n        theme: lexicalTheme,\n        nodes,\n        onError: (error) => {\n          throw error;\n        }\n      }\n    },\n    children\n  );\n};\nconst RichTextEditor = () => {\n  const [contentEditableClassName, composerChildren, topAreaChildren, editorWrappers, placeholder] = corePluginHooks.useEmitterValues(\n    \"contentEditableClassName\",\n    \"composerChildren\",\n    \"topAreaChildren\",\n    \"editorWrappers\",\n    \"placeholder\"\n  );\n  return /* @__PURE__ */ React__default.createElement(React__default.Fragment, null, topAreaChildren.map((Child, index) => /* @__PURE__ */ React__default.createElement(Child, { key: index })), /* @__PURE__ */ React__default.createElement(RenderRecurisveWrappers, { wrappers: editorWrappers }, /* @__PURE__ */ React__default.createElement(\"div\", { className: classNames(styles.rootContentEditableWrapper) }, /* @__PURE__ */ React__default.createElement(\n    RichTextPlugin,\n    {\n      contentEditable: /* @__PURE__ */ React__default.createElement(ContentEditable, { className: classNames(styles.contentEditable, contentEditableClassName) }),\n      placeholder: /* @__PURE__ */ React__default.createElement(\"div\", { className: classNames(styles.contentEditable, styles.placeholder, contentEditableClassName) }, /* @__PURE__ */ React__default.createElement(\"p\", null, placeholder)),\n      ErrorBoundary: LexicalErrorBoundary\n    }\n  ))), composerChildren.map((Child, index) => /* @__PURE__ */ React__default.createElement(Child, { key: index })));\n};\nconst DEFAULT_MARKDOWN_OPTIONS = {\n  listItemIndent: \"one\"\n};\nconst RenderRecurisveWrappers = ({\n  wrappers,\n  children\n}) => {\n  if (wrappers.length === 0) {\n    return /* @__PURE__ */ React__default.createElement(React__default.Fragment, null, children);\n  }\n  const Wrapper = wrappers[0];\n  return /* @__PURE__ */ React__default.createElement(Wrapper, null, /* @__PURE__ */ React__default.createElement(RenderRecurisveWrappers, { wrappers: wrappers.slice(1) }, children));\n};\nconst EditorRootElement = ({ children, className }) => {\n  const editorRootElementRef = React__default.useRef(null);\n  const setEditorRootElementRef = corePluginHooks.usePublisher(\"editorRootElementRef\");\n  React__default.useEffect(() => {\n    const popupContainer = document.createElement(\"div\");\n    popupContainer.classList.add(styles.editorRoot);\n    if (className) {\n      className.split(\" \").forEach((c) => {\n        popupContainer.classList.add(c);\n      });\n    }\n    document.body.appendChild(popupContainer);\n    editorRootElementRef.current = popupContainer;\n    setEditorRootElementRef(editorRootElementRef);\n    return () => {\n      popupContainer.remove();\n    };\n  }, [className, editorRootElementRef, setEditorRootElementRef]);\n  return /* @__PURE__ */ React__default.createElement(\"div\", { className: classNames(styles.editorRoot, styles.editorWrapper, className, \"mdxeditor\") }, children);\n};\nconst Methods = ({ mdxRef }) => {\n  const realm = corePluginHooks.useRealmContext();\n  const hasDiffSourcePlugin = useHasPlugin(\"diff-source\");\n  React__default.useImperativeHandle(\n    mdxRef,\n    () => {\n      return {\n        getMarkdown: () => {\n          if (hasDiffSourcePlugin) {\n            if (realm.getKeyValue(\"viewMode\") === \"source\") {\n              return realm.getKeyValue(\"markdownSourceEditorValue\");\n            }\n          }\n          return realm.getKeyValue(\"markdown\");\n        },\n        setMarkdown: (markdown) => {\n          realm.pubKey(\"setMarkdown\", markdown);\n        },\n        focus: (callbackFn, opts) => {\n          var _a;\n          (_a = realm.getKeyValue(\"rootEditor\")) == null ? void 0 : _a.focus(callbackFn, opts);\n        }\n      };\n    },\n    [realm, hasDiffSourcePlugin]\n  );\n  return null;\n};\nconst MDXEditor = React__default.forwardRef((props, ref) => {\n  return /* @__PURE__ */ React__default.createElement(\n    RealmPluginInitializer,\n    {\n      plugins: [\n        corePlugin({\n          contentEditableClassName: props.contentEditableClassName ?? \"\",\n          initialMarkdown: props.markdown,\n          onChange: props.onChange ?? noop,\n          onBlur: props.onBlur ?? noop,\n          toMarkdownOptions: props.toMarkdownOptions ?? DEFAULT_MARKDOWN_OPTIONS,\n          autoFocus: props.autoFocus ?? false,\n          placeholder: props.placeholder ?? \"\",\n          readOnly: Boolean(props.readOnly)\n        }),\n        ...props.plugins || []\n      ]\n    },\n    /* @__PURE__ */ React__default.createElement(EditorRootElement, { className: props.className }, /* @__PURE__ */ React__default.createElement(LexicalProvider, null, /* @__PURE__ */ React__default.createElement(RichTextEditor, null))),\n    /* @__PURE__ */ React__default.createElement(Methods, { mdxRef: ref })\n  );\n});\nexport {\n  MDXEditor\n};\n", "const lightTheme = \"_light-theme_13nbk_1\";\nconst darkTheme = \"_dark-theme_13nbk_1\";\nconst bold = \"_bold_13nbk_10\";\nconst italic = \"_italic_13nbk_14\";\nconst underline = \"_underline_13nbk_18\";\nconst strikethrough = \"_strikethrough_13nbk_34\";\nconst underlineStrikethrough = \"_underlineStrikethrough_13nbk_38\";\nconst subscript = \"_subscript_13nbk_42\";\nconst superscript = \"_superscript_13nbk_47\";\nconst code = \"_code_13nbk_52\";\nconst nestedListItem = \"_nestedListItem_13nbk_59\";\nconst admonitionDanger = \"_admonitionDanger_13nbk_63\";\nconst admonitionInfo = \"_admonitionInfo_13nbk_63\";\nconst admonitionNote = \"_admonitionNote_13nbk_63\";\nconst admonitionTip = \"_admonitionTip_13nbk_63\";\nconst admonitionCaution = \"_admonitionCaution_13nbk_63\";\nconst styles = {\n  lightTheme,\n  darkTheme,\n  bold,\n  italic,\n  underline,\n  strikethrough,\n  underlineStrikethrough,\n  subscript,\n  superscript,\n  code,\n  nestedListItem,\n  admonitionDanger,\n  admonitionInfo,\n  admonitionNote,\n  admonitionTip,\n  admonitionCaution\n};\nexport {\n  admonitionCaution,\n  admonitionDanger,\n  admonitionInfo,\n  admonitionNote,\n  admonitionTip,\n  bold,\n  code,\n  darkTheme,\n  styles as default,\n  italic,\n  lightTheme,\n  nestedListItem,\n  strikethrough,\n  subscript,\n  superscript,\n  underline,\n  underlineStrikethrough\n};\n", "import styles from \"./lexical-theme.module.css.js\";\nconst lexicalTheme = {\n  text: {\n    bold: styles.bold,\n    italic: styles.italic,\n    underline: styles.underline,\n    code: styles.code,\n    strikethrough: styles.strikethrough,\n    subscript: styles.subscript,\n    superscript: styles.superscript,\n    underlineStrikethrough: styles.underlineStrikethrough\n  },\n  list: {\n    nested: {\n      listitem: styles.nestedListItem\n    }\n  },\n  admonition: {\n    danger: styles.admonitionDanger,\n    info: styles.admonitionInfo,\n    note: styles.admonitionNote,\n    tip: styles.admonitionTip,\n    caution: styles.admonitionCaution\n  }\n};\nexport {\n  lexicalTheme\n};\n"],
  "mappings": "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",
  "names": ["LexicalComposer", "LexicalComposer", "subscription", "RichTextPlugin", "ContentEditable", "_setPrototypeOf", "o", "p", "changedArray", "ErrorBoundary", "LexicalErrorBoundary", "LexicalErrorBoundary", "styles", "styles", "React__default", "classNames", "LexicalErrorBoundary"]
}
